# 07_literal.py

# 리터럴 (literal)
# 고정된 “값”
# 변수에 저장되는 값
# x = 30 	    (30 : 리터럴)
# y = 3.14   (3.14 : 리터럴)
# y=x

# 리터럴 종류
# 정수 리터럴
# 실수 리터럴
# 문자 리터럴
# 문자열 리터럴
# 논리 리터럴

# 정수 리터럴
# 0, 75, -100 : 소수점이 없는 정수
# 0b로 시작하면 2진수 : 0b1011
# 0o로 시작하면 8진수 : 0o751
# 0~9로 시작하면 10진수 : 300
# 0x로 시작하면 16진수 : 0x123ffc
# 1.234 e-2 0.1234 0.01234

751 # 10진수 751
0o751 # 8진수 751
0x123ffc # 16진수 123ffc

b_10 = 751
b_8 = 0o751
b_16 = 0x123ffc
b_2 = 0b1011

print(type(b_8),type(b_16),type(b_10),type(b_2))
print(b_2, b_8, b_10, b_16) # 저장값의 진법과 상관없이 print문은 10진수로 출력


# 실수 리터럴
# 0.25, -3.14 : 소수점이 있는 실수이거나
# e를 포함하는 지수표현 : 1.234e2
# 1.234 e2
# 1.234 e-2 0.1234 0.01234

print(1.234e2) # 소수점을 e 문자 뒤의 숫자만큼 오른쪽으로 이동 - 123.4
print(1.234e-2) # 소수점을 e 문자 뒤의 숫자만큼 왼쪽으로 이동 - 0.01234

# 문자 리터럴
# 따옴표로 묶은 하나의 문자
# ‘A‘
# “B”

# 문자열 리터럴
# 따옴표로 묶은 일련의 문자
# 작은 따옴표, 큰 따옴표, 삼중 따옴표 모두 사용 가능
# ‘홍길동’
# “Python”
# “””Python Programming “””
# ‘’’파이썬 프로그래밍‘’’

char1 = 'a'
char2 = "b"

str1 = '장석재'
str2 = "장석재"
str2_1 = "장석재'형'"
str3 = '''파이썬
프로그래밍 '''
str4 = """ 여러줄로
나누어도
출력해도 됨 """

"""
지금은 리터럴을 배우고 있습니다.
시간은 5시 16분입니다.
3따옴표는 주석을 대신해서 사용하기도 합니다.
"""

print(str4)

#논리값 리터럴
# True, False 값
# x = True

# 특수 리터럴
# None
# 값(객체)이 없음
# name = None
# Name=‘’

name = '장석재'
phon = ''
address = None
print(name, phon, address)
print(type(phon))
print(type(address))